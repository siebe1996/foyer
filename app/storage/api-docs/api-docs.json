{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Fooseball api Documentation",
        "description": "The endpoints to connect to the fooseball api",
        "contact": {
            "name": "Van de Voorde Siebe",
            "email": "siebe.vandevoorde@student.odisee.be"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/sanctum/csrf-cookie": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get CSRF cookie",
                "responses": {
                    "204": {
                        "description": "CSRF cookie retrieved successfully"
                    }
                }
            }
        },
        "/api/games": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get a list of games",
                "description": "Get a list of games.",
                "operationId": "96f81f46ae454085f0e99c7c07bebc6f",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Game1"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-09T05:06:41.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-10T03:28:53.000000Z"
                                                    },
                                                    "competition_id": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "winner_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "fooseballtable_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-12T17:45:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-12T17:45:16.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Store a new game",
                "description": "Store a new game.",
                "operationId": "a805119f9eb6a55ccaf5a63be4b41552",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "unique_code",
                                    "team1_id",
                                    "team2_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Game 1"
                                    },
                                    "unique_code": {
                                        "type": "string",
                                        "example": "ABCD"
                                    },
                                    "team1_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "team2_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game made successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Table doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/games/scores": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get games with teams and scores",
                "description": "Get games with teams and scores.",
                "operationId": "showAllScores",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "teams": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "goals": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/games/{id}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get a game by ID",
                "description": "Returns a game based on the provided ID",
                "operationId": "getGameById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "inventore"
                                                },
                                                "active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-05-09T05:06:41.000000Z"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-05-10T03:28:53.000000Z"
                                                },
                                                "competition_id": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "winner_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "fooseballtable_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-05-12T17:45:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-05-12T17:45:16.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/games/my": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get the games associated with the authenticated player",
                "description": "Display the games associated with the authenticated player.",
                "operationId": "af9bb0e910a2e117272cd661ceb90d83",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Game1"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-09T05:06:41.000000Z"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-10T03:28:53.000000Z"
                                                    },
                                                    "competition_id": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "winner_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "fooseballtable_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-12T17:45:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-12T17:45:16.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tables/{tableId}/teams/{teamId}": {
            "patch": {
                "tags": [
                    "Gameinfo"
                ],
                "summary": "Update score",
                "description": "Update the specified resource in storage.",
                "operationId": "991c8dad9358d33f3c86ca4c9a529a14",
                "parameters": [
                    {
                        "name": "tableId",
                        "in": "path",
                        "description": "ID of the foosball table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "teamId",
                        "in": "path",
                        "description": "ID of the team",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Score change",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "score_change": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Score updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Score updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid score change."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No game is active on this table."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Store a newly created resource in storage.",
                "operationId": "c5e838284c7f343f0e5e5fd589161c96",
                "parameters": [
                    {
                        "name": "X-CSRF-TOKEN",
                        "in": "header",
                        "description": "CSRF Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The user has been authenticated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials do not match our records."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "csrfToken": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Store a newly created resource in storage.",
                "operationId": "399284ae5e84627c95a691127018a412",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The user has been logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tables/{id}/start": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Start game",
                "description": "Start a game.",
                "operationId": "1fb91ac9b30bdb22dbd3ab19dcadbbf6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the foosball table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game started successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "208": {
                        "description": "Game is already running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game is already running."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Foosball table not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tables/{id}/end": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "End game",
                "description": "Stop a game.",
                "operationId": "8f075caa280c145914e52f1f0b7a991b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the foosball table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game ended successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game ended successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "208": {
                        "description": "No Game is running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No Game is running."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Game not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tables": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get a list of fooseball tables",
                "description": "Returns a list of fooseball tables",
                "operationId": "getFooseballTables",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Table1"
                                                    },
                                                    "unique_code": {
                                                        "type": "string",
                                                        "example": "ABCD"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tables/{id}": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get the details of a fooseball table",
                "description": "Returns the details of a fooseball table",
                "operationId": "getFooseballTable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the fooseball table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Table1"
                                                },
                                                "unique_code": {
                                                    "type": "string",
                                                    "example": "ABCD"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fooseball table not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Fooseball table doesn't exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tables/{id}/scores": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get scores for a table",
                "description": "Get the scores for a specific table.",
                "operationId": "3b88ba4acb2f50f8e0ef9dac0d751071",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "team_name": {
                                                        "type": "string"
                                                    },
                                                    "game_name": {
                                                        "type": "string"
                                                    },
                                                    "start_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "end_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "table_id": {
                                                        "type": "integer"
                                                    },
                                                    "goals": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No game running on this table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get teams excluding the authenticated player",
                "description": "Display a listing of the resource.",
                "operationId": "eb8aa1f33762f49febf826d512f4bd5c",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Team1"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Create a new team",
                "description": "Store a newly created resource in storage.",
                "operationId": "2d8fa49c50fecbdffbaefe0648856edd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The optional ID of the second player",
                                        "type": "integer",
                                        "format": "int64",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Team created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Team was made successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/teams/my": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get teams of the authenticated player",
                "description": "Display loggedin user teams.",
                "operationId": "f35814e77567d7086108191bf87bc3ba",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Team1"
                                                    },
                                                    "player1_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "player2_id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "total_wins": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "games_played": {
                                                        "type": "integer",
                                                        "example": 9
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users except the authenticated user",
                "description": "Display a listing of the resource.",
                "operationId": "88e08afbcf11b50e46fded873adde45e",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registration",
                "description": "Register a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get logged-in user profile",
                "description": "Display loggedin user.",
                "operationId": "650b2420492dafd00dec1efd87fb19e8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "total_wins": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "games_played": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "player"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "teams": {
                                                    "properties": {
                                                        "as_player1": {
                                                            "type": "array",
                                                            "items": {}
                                                        },
                                                        "as_player2": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "ut"
                                                                    },
                                                                    "player1_id": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "player2_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "total_wins": {
                                                                        "type": "integer",
                                                                        "example": 3
                                                                    },
                                                                    "games_played": {
                                                                        "type": "integer",
                                                                        "example": 9
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "admin": {
                                            "description": "Indicates if the user is an administrator",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    }
}